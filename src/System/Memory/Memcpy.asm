; Copyright 2022 Raphtaliyah <me@raphtaliyah.moe>
;---------------------------------------------------------------------
; Module
;---------------------------------------------------------------------
    .module Memcpy
;---------------------------------------------------------------------
; Global symbols
;---------------------------------------------------------------------
    
;---------------------------------------------------------------------
; Includes
;---------------------------------------------------------------------
    .include \src/Headers/Memcpy.h.asm\
;---------------------------------------------------------------------
; Memory initializers
;---------------------------------------------------------------------
    .area INIT (CSEG)
    .area XINIT (CSEG)
;---------------------------------------------------------------------
; Memory
;---------------------------------------------------------------------
    .area BIT   (DSEG)
    .area DATA  (DSEG)
    .area XDATA (DSEG)
;---------------------------------------------------------------------
; Constant data
;---------------------------------------------------------------------
    .area CODE (CSEG)
;---------------------------------------------------------------------
; Constants
;---------------------------------------------------------------------
    
;---------------------------------------------------------------------
; Code
;---------------------------------------------------------------------
    .area CODE (CSEG)

;--------------------------------------------
; Copies data from ROM to XRAM.
;--------------------------------------------
; Parameters:
;   dptr  - ROM pointer.
;   /dptr - XRAM pointer.
;   r0    - Length.
; Returns:
;   nothing
;--------------------------------------------
memcpy_romxram:
    push a
    push r0
    push dpl
    push dph
    push dplb
    push dphb

    mov a, r0       ; Zero length check.
    jz  romxramExit

    romxramLoop:
    clr  a
    movc a,      @a+dptr
    movx @/dptr, a
    inc  dptr
    inc  /dptr
    djnz r0,     romxramLoop
    
    romxramExit:
    pop dphb
    pop dplb
    pop dph
    pop dpl
    pop r0
    pop a
    ret